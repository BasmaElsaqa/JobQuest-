// Generated by view binder compiler. Do not edit!
package com.example.jobquestbottomnavigation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.jobquestbottomnavigation.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityApplyForPositionBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView applyingPosition;

  @NonNull
  public final MaterialButton cancelBtn;

  @NonNull
  public final ScrollView main;

  @NonNull
  public final MaterialButton saveForLaterBtn;

  @NonNull
  public final MaterialButton submitBtn;

  @NonNull
  public final TextView uploadResumeBtn;

  private ActivityApplyForPositionBinding(@NonNull ScrollView rootView,
      @NonNull TextView applyingPosition, @NonNull MaterialButton cancelBtn,
      @NonNull ScrollView main, @NonNull MaterialButton saveForLaterBtn,
      @NonNull MaterialButton submitBtn, @NonNull TextView uploadResumeBtn) {
    this.rootView = rootView;
    this.applyingPosition = applyingPosition;
    this.cancelBtn = cancelBtn;
    this.main = main;
    this.saveForLaterBtn = saveForLaterBtn;
    this.submitBtn = submitBtn;
    this.uploadResumeBtn = uploadResumeBtn;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityApplyForPositionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityApplyForPositionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_apply_for_position, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityApplyForPositionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.applying_position;
      TextView applyingPosition = ViewBindings.findChildViewById(rootView, id);
      if (applyingPosition == null) {
        break missingId;
      }

      id = R.id.cancel_btn;
      MaterialButton cancelBtn = ViewBindings.findChildViewById(rootView, id);
      if (cancelBtn == null) {
        break missingId;
      }

      ScrollView main = (ScrollView) rootView;

      id = R.id.save_for_later_btn;
      MaterialButton saveForLaterBtn = ViewBindings.findChildViewById(rootView, id);
      if (saveForLaterBtn == null) {
        break missingId;
      }

      id = R.id.submit_btn;
      MaterialButton submitBtn = ViewBindings.findChildViewById(rootView, id);
      if (submitBtn == null) {
        break missingId;
      }

      id = R.id.upload_resume_btn;
      TextView uploadResumeBtn = ViewBindings.findChildViewById(rootView, id);
      if (uploadResumeBtn == null) {
        break missingId;
      }

      return new ActivityApplyForPositionBinding((ScrollView) rootView, applyingPosition, cancelBtn,
          main, saveForLaterBtn, submitBtn, uploadResumeBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
